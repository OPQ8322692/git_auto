{"name": "测试用例标题2", "status": "broken", "statusDetails": {"message": "TypeError: test_2() takes 0 positional arguments but 1 was given", "trace": "cls = _pytest.runner.CallInfo\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x03332108>\nwhen = 'call'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\_pytest\\runner.py:311: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\_pytest\\runner.py:255: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\_pytest\\runner.py:170: in pytest_runtest_call\n    raise e\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\_pytest\\runner.py:162: in pytest_runtest_call\n    item.runtest()\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\_pytest\\python.py:1641: in runtest\n    self.ihook.pytest_pyfunc_call(pyfuncitem=self)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npyfuncitem = <Function test_2>\n\n    @hookimpl(trylast=True)\n    def pytest_pyfunc_call(pyfuncitem: \"Function\") -> Optional[object]:\n        testfunction = pyfuncitem.obj\n        if is_async_function(testfunction):\n            async_warn_and_skip(pyfuncitem.nodeid)\n        funcargs = pyfuncitem.funcargs\n        testargs = {arg: funcargs[arg] for arg in pyfuncitem._fixtureinfo.argnames}\n>       result = testfunction(**testargs)\nE       TypeError: test_2() takes 0 positional arguments but 1 was given\n\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\site-packages\\_pytest\\python.py:183: TypeError"}, "description": "执行用例2的结果是test2", "start": 1643086488660, "stop": 1643086488661, "uuid": "58c118e9-5144-4a23-806f-c500dc3d1ea2", "historyId": "660b7f42b1e854ddd427fe6a35e65dba", "testCaseId": "5c4c57b41f6e19b7cb731450df5ea113", "fullName": "testcase.t_allure.allure_demo.TestAllure#test_2", "labels": [{"name": "feature", "value": "接口测试，这是一个一级标签"}, {"name": "parentSuite", "value": "testcase.t_allure"}, {"name": "suite", "value": "allure_demo"}, {"name": "subSuite", "value": "TestAllure"}, {"name": "host", "value": "test"}, {"name": "thread", "value": "131804-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.t_allure.allure_demo"}]}